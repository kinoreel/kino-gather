#!groovy

node {
    registry_url = "${env.REGISTRY_URL}"
    build_tag = "latest"

    def kino_tables = ['movies'
                      ,'movies2companies'
                      ,'movies2genres'
                      ,'movies2keywords'
                      ,'movies2numbers'
                      ,'movies2persons'
                      ,'movies2posters'
                      ,'movies2ratings'
                      ,'movies2streams'
                      ,'movies2trailers'
                      ]

    stage 'Git'
    git([ url: 'https://github.com/kinoreel/kino-gather.git', branch: '${BRANCH}'])

    maintainer_name = "${env.MAINTAINER}"

    def TABLE_NAME

    kino_tables.each {

        TABLE_NAME = ${it}

        container_name = "insert-${it}"
        echo "${env.PG_SERVER}"
        echo "${env.PG_PORT}"
        echo "${env.PG_DB}"
        echo "${env.PG_USERNAME}"
        echo "${env.PG_PASSWORD}"
        echo "${env.KAFKA_BROKER}"
        echo "${TABLE_NAME}"

        image_name = "${registry_url}/${maintainer_name}/${container_name}:${build_tag}"
        stage "Building Docker image"
        container = docker.build("${image_name}", ' --build-arg KAFKA_BROKER=${env.KAFKA_BROKER} --build-arg TABLE_NAME=${TABLE_NAME} --build-arg PG_SERVER=${env.PG_SERVER} --build-arg PG_PORT=${env.PG_PORT} --build-arg PG_DB=${env.PG_DB} --build-arg PG_USERNAME=${env.PG_USERNAME} --build-arg PG_PASSWORD=${env.PG_PASSWORD} inserts')

        stage "Pushing Docker image"
        sh "gcloud docker -- push ${image_name}"
        sh "docker rmi ${image_name}"

        currentBuild.result = 'SUCCESS'

        stage 'Deploy'
        sh 'kubectl apply -f inserts/kubernetes-deployments/${it}-deployment.yaml'

    }
}